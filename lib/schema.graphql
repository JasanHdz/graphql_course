
"Valida los tipos de nivel"
enum Level {
  principiante,
  intermedio,
  avanzada
}

type Course {
  _id: ID!,
  title: String!,
  teacher: String,
  description: String!,
  topic: String,
  people: [Student]
  level: Level
}

interface Person {
  _id: ID!,
  name: String!,
  email: String!,
}

type Student implements Person {
  _id: ID!,
  name: String!,
  email: String!,
  avatar: String 
}

type Monitor implements Person {
  _id: ID!,
  name: String!,
  email: String!,
  phone: String
}

type Query {
    "Devuelve todos los cursos"
    Courses: [Course],
    Course(id: ID!): Course
    "Devuelve todos los estudiantes"
    People: [Person],
    Person(id: ID!): Person
}

input CourseInput {
  title: String!,
  teacher: String,
  description: String!,
  topic: String,
  level: Level
}

input PersonInput {
  name: String!,
  email: String!,
  phone: String,
  avatar: String
}

input CourseEditInput {
  title: String,
  teacher: String,
  description: String,
  topic: String,
  level: Level
}

input PersonEditInput {
  name: String,
  email: String,
  phone: String,
  avatar: String
}

type Mutation {
    "Crea un un Curso"
  createCourse(input: CourseInput!): Course,
    "Edita un Curso",
  editCourse(_id: ID!, input: CourseEditInput): Course,
    "Eliminar un Curso"
  deleteCourse(_id: ID!): String,

    "Crea una Persona"
  createPerson(input: PersonInput!): Person,
    "Edita una Persona"
  editPerson(_id: ID!, input: PersonEditInput): Person,
    "Elimina un Estudiante"
  deleteStudent(_id: ID!): String,

  "Agrega persona a un curso"
  addPeople(courseID: ID!, personID: ID!): Course
}


